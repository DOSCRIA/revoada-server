datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "client/generated"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "docs"
}

model Users {
  id          String   @id @default(uuid())
  name        String
  lastName    String   @map("last_name")
  email       String   @unique
  password    String   @unique
  phoneNumber String   @map("phone_number")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  RefreshToken RefreshTokens?
  usersTickets UsersTickets[]

  @@map("users")
}

model Companies {
  id          String   @id @default(uuid())
  name        String
  email       String
  phoneNumber String   @map("phone_number")
  address     String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")
  events      Events[]

  @@map("companies")
}

model Events {
  id          String   @id @default(uuid())
  name        String
  description String
  companyId   String
  eventDate   DateTime @default(now()) @map("event_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  company Companies @relation(fields: [companyId], references: [id], onDelete: Cascade)
  tickets Tickets[]

  @@map("events")
}

model RefreshTokens {
  id        String   @id @default(uuid())
  expiresIn Int      @default(0) @map("expires_in")
  userId    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  users Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Tickets {
  id            String   @id @default(uuid())
  price         Decimal
  purchaseLimit Int
  deadline      DateTime @default(now())
  eventId       String

  events       Events[]       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  usersTickets UsersTickets[]

  @@map("tickets")
}

model UsersTickets {
  ticket Tickets @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  user   Users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  id       String @id @default(uuid())
  userId   String
  ticketId String
  quantity Int

  @@map("users_tickets")
}
